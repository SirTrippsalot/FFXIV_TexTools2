<Window     
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:local="clr-namespace:FFXIV_TexTools2" 
    xmlns:local1 ="clr-namespace:FFXIV_TexTools2.ViewModel" 
    xmlns:local2="clr-namespace:FFXIV_TexTools2" 
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
    xmlns:hx="http://helix-toolkit.org/wpf/SharpDX" 
    xmlns:shader="clr-namespace:FFXIV_TexTools2.Shader" 
    xmlns:views ="clr-namespace:FFXIV_TexTools2.Views" 
    
    x:Class="FFXIV_TexTools2.MainWindow" 
    mc:Ignorable="d" Title="XIV DevTool" 
    Height="650" Width="1100" MinWidth="700"  MinHeight="500" Icon="Resources/NewIcon.ico"  
    BorderThickness="0" WindowStartupLocation="Manual" Closed="Window_Closed" 
    x:Name="MainWin" Background="#01282828"  WindowStyle="None"  
    AllowsTransparency="True" ResizeMode="CanResizeWithGrip" SourceInitialized="Window_SourceInitialized" SizeChanged="MainWin_SizeChanged"
    StateChanged="MainWin_StateChanged"
>


    <Window.Resources>
        <Style x:Key="BorderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Rectangle MinWidth="10" MinHeight="10"  StrokeThickness="2">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="#00000000" Opacity="100.00"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Border}" x:Key="BorderStyle">
            <Setter Property="Background" Value="#00000000"/>
        </Style>
        <Style TargetType="{x:Type ResizeGrip}">
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ResizeGrip}">
                        <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Hidden"/>
        </Style>
        <SolidColorBrush x:Key="DarkSquareColor" Color="#CC000000" />
        <SolidColorBrush x:Key="LightSquareColor" Color="#BF000000" />
        <Style x:Key="{x:Type xctk:Zoombox}" TargetType="{x:Type xctk:Zoombox}">
            <Style.Triggers>
                <Trigger Property="AreDragModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                </Trigger>
                <Trigger Property="AreZoomModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
                <Trigger Property="AreZoomToSelectionModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Cross" />
                </Trigger>
                <Trigger Property="AreRelativeZoomModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
                <!-- The IsDraggingContent and IsSelectingRegion triggers should  always be last. -->
                <Trigger Property="IsDraggingContent" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                </Trigger>
                <Trigger Property="IsSelectingRegion" Value="True">
                    <Setter Property="Cursor" Value="Cross" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="GlyphBrush" Color="#FFA1A1A1" />
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" Background="Transparent">
                            <Path x:Name="ExpandPath" HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="1,1,1,1" Fill="{StaticResource GlyphBrush}" Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="#FF717171" StrokeDashArray="1 2" Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border BorderBrush="#00FFFFFF" BorderThickness="0">
        <Grid>
        <Grid x:Name="Grid_Content" Background="#EFF7FA" >
            <Grid   Background="#FF282828">
                <Grid x:Name="SplitOverlay" Margin="0,32,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="400"/>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition x:Name="RightColumn" MinWidth="180" Width="319.511"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="LeftBG" Panel.ZIndex="-1" Background="#FF717171" CornerRadius="15,0,0,15" Margin="80,0,-15,0"/>
                    <Border  x:Name="RightBG" Panel.ZIndex="0"  Grid.Column="1" CornerRadius="15,0,0,15" Background="#FF505050" Grid.ColumnSpan="2"/>
                    <Grid IsHitTestVisible="False" Grid.ColumnSpan="3" Margin="0,-32,0,0" Opacity="0.20">
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                <GradientStop Color="White"  Offset="1"/>
                                <GradientStop Color="Black"/>
                            </LinearGradientBrush>
                        </Grid.Background>
                        <Image x:Name="BG" IsHitTestVisible="False" Source="Resources/BG.jpg" Stretch="UniformToFill" Grid.ColumnSpan="3"  Opacity="0.1" Visibility="Hidden"/>
                    </Grid>
                    <GroupBox x:Name="TexturesGroup" Header=""  Grid.Column="2" BorderBrush="{x:Null}">
                        <Grid>
                            <TreeView x:Name="textureTreeView" ItemsSource="{Binding Category}"   SelectedItemChanged="textureTreeView_SelectedItemChanged" Background="#00000000" BorderBrush="{x:Null}" Foreground="#00000000" IsTextSearchEnabled="True">
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type local1:CategoryViewModel}" ItemsSource="{Binding Children}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}" IsHitTestVisible="False"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="{x:Type TreeViewItem}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="Padding" Value="1,0,0,0"/>
                                            <Setter Property="Foreground" Value="#FFA1A1A1"/>
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                                            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                            </Border>
                                                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter Property="FontWeight" Value="Bold"/>
                                                                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                                            </Trigger>

                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="Border.Background"  Value="#00000000"/>
                                                                <Setter Property="Background"  Value="#00000000"/>
                                                                <Setter Property="BorderBrush" Value="#00000000"/>
                                                                <Setter Property="Foreground" Value="#FF58A6C3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsExpanded" Value="false">
                                                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="HasItems" Value="false">
                                                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="HasHeader" Value="false"/>
                                                                    <Condition Property="Width" Value="Auto"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="HasHeader" Value="false"/>
                                                                    <Condition Property="Height" Value="Auto"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="IsSelected" Value="true">
                                                                <Setter Property="FontWeight" Value="Bold"/>
                                                                <Setter Property="Foreground" Value="#ffffffff"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true"/>
                                                                    <Condition Property="IsSelectionActive" Value="false"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                </TreeView.ItemContainerStyle>
                            </TreeView>
                        </Grid>
                    </GroupBox>
                        <Border Panel.ZIndex="-1" VerticalAlignment="Top" CornerRadius="15,0,0,0" Height="38" Margin="80,0,-15,0" Background="#44FFFFFF"/>
                        <TabControl x:Name="tabControl"  TabStripPlacement="Left" Background="#00000000" BorderBrush="{x:Null}" >
                        <TabItem  Width="75" x:Name="TexTab" DataContext="{Binding TextureVM}" Background="#00000000" BorderBrush="{x:Null}" Height="100" Padding="0" >
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal" Background="#00000000">
                                    <Image Height="75" Width="75" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="Resources/Textures_Deselected.png"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="True">
                                                        <Setter Property="Source"  Value="Resources/Textures_Selected.png" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Source" Value="Resources/Textures_Hover.png"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </StackPanel>
                            </TabItem.Header>
                                <Grid>
                                    
                                    <views:TextureView x:Name="VTV"/>
                                </Grid>

                        </TabItem>
                        <TabItem Width="75"  IsEnabled="{Binding ModelTabEnabled, FallbackValue=true}" DataContext="{Binding ModelVM}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF58A6C3" Height="100" Padding="0">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal" Background="#00000000">
                                    <Image  Height="75" Width="75" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="Resources/Models_Deselected.png"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="True">
                                                        <Setter Property="Source"  Value="Resources/Models_Selected.png" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Source" Value="Resources/Models_Hover.png"/>
                                                    </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.3"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </StackPanel>
                            </TabItem.Header>

                                    <views:ModelView/>
 
                            </TabItem>
                        <TabItem Width="75"  Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF58A6C3" Height="100" Padding="0">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal" Background="#00000000">
                                    <Image  Height="75" Width="75" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="Resources/Mods_Deselected.png"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="True">
                                                        <Setter Property="Source"  Value="Resources/Mods_Selected.png" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Source" Value="Resources/Mods_Hover.png"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </StackPanel>
                            </TabItem.Header>
                                <views:SettingsView/>
                            </TabItem>
                        <TabItem x:Name="ChatTab" Width="75" Margin="0,100,0,-100"   Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF58A6C3" Height="100" Padding="0">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal" Background="#00000000">
                                    <Image  Height="75" Width="75" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="Resources/Chat_Deselected.png"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="True">
                                                        <Setter Property="Source"  Value="Resources/Chat_Selected.png" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Source" Value="Resources/Chat_Hover.png"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </StackPanel>
                            </TabItem.Header>
                                <views:SettingsView/>
                            </TabItem>
                        <TabItem x:Name="SettingsTab" Width="75" Margin="0,100,0,-100"   Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF58A6C3" Height="100" Padding="0" >
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal" Background="#00000000">
                                    <Image  Height="75" Width="75" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="Resources/Settings_Deselected.png"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="True">
                                                        <Setter Property="Source"  Value="Resources/Settings_Selected.png" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Source" Value="Resources/Settings_Hover.png"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </StackPanel>
                            </TabItem.Header>
                            <views:SettingsView/>
                        </TabItem>
                    </TabControl>
                    <Border Grid.Column="1" Padding="0" Margin="0,35" CornerRadius="0,10,10,0" BorderThickness="0,1,1,1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FF313131" Opacity="0.5"/>
                        </Border.BorderBrush>
                        <Border.Background>
                            <ImageBrush TileMode="Tile" ImageSource="Resources/Grip.png" Stretch="Uniform" Opacity="0.3"  ViewportUnits="Absolute" Viewport="0,0,15,11 "/>
                        </Border.Background>
                    </Border>
                    <Button Style="{StaticResource ImageButtonStyle}" Click="ImageButton_Click" x:Name="SplitCollapse" Grid.Column="1"  Width="15" VerticalAlignment="Top" Margin="0,17,0,0">
                        <Image x:Name="IMGCollapse1" Source="Resources/Collapse.png" />
                    </Button>
                    <Button Style="{StaticResource ImageButtonStyle}" Click="ImageButton_Click" x:Name="SplitCollapse2" Grid.Column="1"  Width="15" VerticalAlignment="Bottom" Margin="0,0,0,17">
                        <Image x:Name="IMGCollapse2" Source="Resources/Collapse.png" />
                    </Button>
                    <GridSplitter x:Name="MainSplitter" Grid.Column="1" Width="15"  HorizontalAlignment="Center" Margin="0,35" BorderThickness="0,5,5,5" Background="#00000000"/>
                </Grid>

                <StackPanel Orientation="Horizontal" Background="#00000000" Height="32" VerticalAlignment="Top">
                    <Image x:Name="PART_Icon" Source="Resources/NewIcon.png" VerticalAlignment="Center"  Stretch="Fill"  HorizontalAlignment="Left" Margin="4,2,2,4" Width="225" Height="25"  MaxWidth="225" MaxHeight="25" MinWidth="225" MinHeight="25" />
                    <ContentControl Foreground="Black"   VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="TitlePresenter" Margin="5,5,5,5" />
                </StackPanel>
                <Grid Margin="0,3.5,60,0" Height="25" VerticalAlignment="Top">
                    <Border  CornerRadius="5" Background="#FF505050" HorizontalAlignment="Right" Width="253" Height="18">
                        <TextBox  Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" TextWrapping="NoWrap" BorderBrush="{x:Null}" Background="#00000000"  Foreground="#FF58A6C3"/>
                    </Border>
                    <Image x:Name="Search" Height="20" Width="20" Source="Resources/Search.png" Margin="277.511,-1,3,0" HorizontalAlignment="Right" />
                </Grid>
                <Grid x:Name="NewBar" MouseMove="NewBar_MouseMove"  MouseUp="NewBar_MouseUp"  MouseDown="NewBar_MouseDown" VerticalAlignment="Top" Height="32" Background="#00000000">
                    <StackPanel   Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,6.573,5,6.573" d:LayoutOverrides="Height">
                        <Button x:Name="MinimizeButton" PreviewMouseDown="MinimizeButton_MouseDown" Content="_" ToolTip="Minimize" Background="#00000000" FontWeight="Bold" FontSize="20" Margin="0,-10,0,0" FontFamily="Showcard Gothic"/>
                        <Button x:Name="MaximizeButton" PreviewMouseDown="MaximizeButton_MouseDown"  Content="🗖" ToolTip="Maximize" Background="#00000000" FontFamily="Showcard Gothic"/>
                        <Button x:Name="CloseButton"  PreviewMouseDown="CloseButton_MouseDown"  Content="X" ToolTip="Close" Background="#00000000" FontFamily="Showcard Gothic"/>
                    </StackPanel>
                    <Button Margin="0,4.143,315,6.857" HorizontalAlignment="Right"  x:Name="DXVerStatus" Content="DirectX19" Padding="0" Click="DXVerStatus_Click"/>
                </Grid>
            </Grid>

        </Grid>

        <Grid Name="Resizers" Margin="-6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Thumb x:Name="ThumbBottom" DragDelta="ThumbBottom_DragDelta" HorizontalAlignment="Stretch" Cursor="SizeNS" Grid.Column="0" Background="{x:Null}"  Margin="3,0" Grid.ColumnSpan="3" Grid.Row="3" Style="{Binding Mode=OneWay, Source={StaticResource BorderThumb}}"/>
            <Thumb x:Name="ThumbTop" DragDelta="ThumbTop_DragDelta" HorizontalAlignment="Stretch" Cursor="SizeNS" Grid.Column="0" Background="{x:Null}"  Margin="3,0" Grid.ColumnSpan="3"  Style="{Binding Mode=OneWay, Source={StaticResource BorderThumb}}"/>
                <Thumb x:Name="ThumbRight" DragDelta="ThumbRight_DragDelta" Cursor="SizeWE" Grid.Column="2" Grid.RowSpan="4" Background="{x:Null}"  Margin="0,3" Style="{Binding Mode=OneWay, Source={StaticResource BorderThumb}}"/>
                <Thumb x:Name="ThumbLeft" DragDelta="ThumbLeft_DragDelta" Cursor="SizeWE" Grid.Column="0" Grid.RowSpan="4" HorizontalContentAlignment="Right" Background="{x:Null}" Margin="0,3" Style="{Binding Mode=OneWay, Source={StaticResource BorderThumb}}"/>
                <Thumb x:Name="ThumbBottomRightCorner" DragDelta="ThumbBottomRightCorner_DragDelta" HorizontalAlignment="Right" Cursor="SizeNWSE" Grid.Row="3" Grid.Column="3" Background="{x:Null}" Style="{Binding Mode=OneWay, Source={StaticResource BorderThumb}}"/>
            <Thumb x:Name="ThumbTopRightCorner" DragDelta="ThumbTopRightCorner_DragDelta" HorizontalAlignment="Right" Cursor="SizeNESW" Grid.Row="0" Grid.Column="2" Background="{x:Null}" Style="{Binding Mode=OneWay, Source={StaticResource BorderThumb}}"/>
            <Thumb x:Name="ThumbTopLeftCorner" DragDelta="ThumbTopLeftCorner_DragDelta" HorizontalAlignment="Left" Cursor="SizeNWSE" Grid.Row="0" Grid.Column="0" Background="{x:Null}" Style="{Binding Mode=OneWay, Source={StaticResource BorderThumb}}" />
            <Thumb x:Name="ThumbBottomLeftCorner" DragDelta="ThumbBottomLeftCorner_DragDelta" HorizontalAlignment="Left" Cursor="SizeNESW" Grid.Row="3" Grid.Column="0" Background="{x:Null}" Style="{Binding Mode=OneWay, Source={StaticResource BorderThumb}}" />
           
        </Grid>
        </Grid>
    </Border>
</Window>