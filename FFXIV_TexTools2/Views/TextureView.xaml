<UserControl x:Class="FFXIV_TexTools2.Views.TextureView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600">
    <UserControl.Resources>
        <SolidColorBrush x:Key="DarkSquareColor" Color="#ff777777" />
        <SolidColorBrush x:Key="LightSquareColor" Color="#ffaaaaaa" />
        <Style x:Key="{x:Type xctk:Zoombox}" TargetType="{x:Type xctk:Zoombox}">
            <Style.Triggers>
                <Trigger Property="AreDragModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                </Trigger>
                <Trigger Property="AreZoomModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
                <Trigger Property="AreZoomToSelectionModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Cross" />
                </Trigger>
                <Trigger Property="AreRelativeZoomModifiersActive" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
                <!-- The IsDraggingContent and IsSelectingRegion triggers should 
           always be last. -->
                <Trigger Property="IsDraggingContent" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                </Trigger>
                <Trigger Property="IsSelectingRegion" Value="True">
                    <Setter Property="Cursor" Value="Cross" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
            <Border>
 
                <Grid>
                    <xctk:Zoombox x:Name="zoomBox" DragModifiers="0" ZoomModifiers="0" KeepContentInBounds="True" MinScale="0.2" MaxScale="40" IsAnimated="False" ViewStackMode="Disabled" PanDistance="2">
                    <Grid Background="#ffffffff" VerticalAlignment="Bottom" HorizontalAlignment="Right"><Border Margin="0,0,0,0" BorderThickness="1" BorderBrush="Black">
                            <Border.Background>
                                <DrawingBrush Viewport="0,0,8.3,8.3" ViewportUnits="Absolute" Stretch="None" TileMode="Tile">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{DynamicResource DarkSquareColor}">
                                                <GeometryDrawing.Geometry>
                                                    <GeometryGroup>
                                                        <RectangleGeometry Rect="0,0,4,4"/>
                                                        <RectangleGeometry Rect="4,4,4,4"/>
                                                    </GeometryGroup>
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="{DynamicResource LightSquareColor}">
                                                <GeometryDrawing.Geometry>
                                                    <GeometryGroup>
                                                        <RectangleGeometry Rect="4,0,4,4"/>
                                                        <RectangleGeometry Rect="0,4,4,4"/>
                                                    </GeometryGroup>
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Border.Background>
                            
                            <Image x:Name="texImage" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="{Binding ImageSource, NotifyOnSourceUpdated=True}" Opacity="0.05" />
                        </Border>
                    </Grid>
                </xctk:Zoombox>
                <Grid x:Name="TextureTopBar" VerticalAlignment="Top" Margin="0">
                    <Grid Margin="0" Height="33" VerticalAlignment="Center" HorizontalAlignment="Right" Width="151" IsEnabled="{Binding ChannelsEnabled, FallbackValue=false}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <CheckBox x:Name="redCheckBox" Content="R" HorizontalAlignment="Center" Margin="-2,0,0,0" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" IsChecked="{Binding RedChecked}"/>
                        <CheckBox x:Name="greenCheckBox" Content="G" Grid.Column="1" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding GreenChecked}"/>
                        <CheckBox x:Name="blueCheckBox" Content="B" Grid.Column="2" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding BlueChecked}"/>
                        <CheckBox x:Name="alphaCheckBox" Content="A" Grid.Column="3" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding AlphaChecked}"/>
                    </Grid>
                    <Label x:Name="texTypeLabel" Content="{Binding TextureType}"  HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold"/>
                    <Label x:Name="texDimensionLabel" Content="{Binding TextureDimensions}"  HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"/>
                    </Grid>
            </Grid>
  
        </Border>
        <Grid Height="37" Margin="10,10,10,70" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <ComboBox x:Name="raceComboBox" Margin="5,5,5.5,5" IsReadOnly="True" ItemsSource="{Binding RaceComboBox}" DisplayMemberPath="Name" SelectedValuePath="Name" SelectedItem="{Binding SelectedRace}" SelectedIndex="{Binding RaceIndex}" IsEnabled="{Binding RaceEnabled, FallbackValue=false}"/>
            <ComboBox x:Name="mapComboBox" Grid.Column="1" Margin="5" IsReadOnly="True" IsTextSearchEnabled="False" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding MapComboBox}" DisplayMemberPath="Name" SelectedValuePath="Name" SelectedItem="{Binding SelectedMap}" SelectedIndex="{Binding MapIndex}" IsEnabled="{Binding MapEnabled, FallbackValue=false}"/>
            <ComboBox x:Name="partComboBox" Grid.Column="2" Margin="5" IsSynchronizedWithCurrentItem="False" IsReadOnly="True" ItemsSource="{Binding PartComboBox}" DisplayMemberPath="Name" SelectedValuePath="Name" SelectedItem="{Binding SelectedPart}" SelectedIndex="{Binding PartIndex}" IsEnabled="{Binding PartEnabled, FallbackValue=false}"/>
            <ComboBox x:Name="typeComboBox" Grid.Column="3" Margin="5,5,6,5" IsSynchronizedWithCurrentItem="False" IsReadOnly="True" ItemsSource="{Binding TypeComboBox}" DisplayMemberPath="Name" SelectedValuePath="Name" SelectedItem="{Binding SelectedType}" SelectedIndex="{Binding TypeIndex}" IsEnabled="{Binding TypeEnabled, FallbackValue=false}"/>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="fullPathLabel" Grid.Column="0" VerticalAlignment="Bottom" Margin="10,0,2,40" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" HorizontalContentAlignment="Center" IsReadOnly="True" Text="{Binding FullPathString, Mode=OneWay}" TextChanged="fullPathLabel_TextChanged" />
            <Button Grid.Column="1" Margin="0,0,0,40" VerticalAlignment="Bottom" MinWidth="20" MinHeight="20" MaxWidth="20" MaxHeight="20" Padding="0" Command="{Binding OpenFolderCommand}" IsEnabled="{Binding OpenEnabled, FallbackValue=false}">
                <Button.Background>
                    <ImageBrush ImageSource="/FFXIV TexTools 2;component/Resources/FolderOpen_16x.png" Stretch="Uniform"/>
                </Button.Background>
            </Button>
        </Grid>
        <Grid x:Name="textureButtonGrid" Margin="10,0,10,0" Height="40" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button x:Name="Save_All_DDS" Margin="5" Grid.Column="4" Content="Save All DDS" Click="Save_All_DDS_Click" IsEnabled="{Binding SaveEnabled, FallbackValue=false}" Background="#00000000"/>
            <Button Content="Export as Image" Margin="5" Command="{Binding SavePNGCommand}" IsEnabled="{Binding SaveEnabled, FallbackValue=false}" Background="#00000000"/>
            <Button Content="Export as DDS" Grid.Column="1" Margin="5" Command="{Binding SaveDDSCommand}" IsEnabled="{Binding SaveEnabled, FallbackValue=false}" Background="#00000000"/>
            <Button Content="Import" Grid.Column="2" Margin="5" Command="{Binding ImportCommand}" IsEnabled="{Binding ImportEnabled, FallbackValue=false}" Background="#00000000"/>
            <Button Content="{Binding ActiveToggle, FallbackValue='Enable/Disable' }" Grid.Column="3" Margin="5" Command="{Binding ActiveCommand}" IsEnabled="{Binding ActiveEnabled, FallbackValue=false}"/>
        </Grid>
    </Grid>
</UserControl>
